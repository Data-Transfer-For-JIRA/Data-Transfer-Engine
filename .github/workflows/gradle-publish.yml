# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches:
      - master  # master 브랜치에 푸시될 때 실행
  release:
    types: [created]

jobs:
  build:
    runs-on: self-hosted  # 로컬에서 실행될 self-hosted runner 사용
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4 #소스 코드 체크 아웃

    - name: Cache Gradle dependencies # Gradle 캐시 설정
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-      

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin' # JDK 설치
        # GitHub Packages에 패키지 배포하지 않기 때문에 주석 처리
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        #settings-path: ${{ github.workspace }} # location for the settings.xml file
    # GitHub Packages용 설정
    #- name: Setup Gradle
    #  uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle # 프로젝트 빌드 (JAR 파일 생성)
      run: ./gradlew build

    - name: Deploy JAR to local server # 로컬 서버 경로에 jar 파일 생성
      run:  cp ./build/libs/Data-Transfer-Engine.jar C:/MARKANY_JIRA/JAR/Data-Transfer-Engine.jar

    - name: Stop existing JAR (if running) # 현재 프로세스 종료
      run:  pkill -f 'Data-Transfer-Engine.jar' || echo "No existing process found"  # 기존에 실행 중인 JAR 파일이 있다면 종료

    - name: Run JAR on local server # 로컬서버에서 실행
      run: nohup java -jar C:/MARKANY_JIRA/JAR/Data-Transfer-Engine.jar &  # JAR 파일을 백그라운드에서 실행



    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
#    - name: Publish to GitHub Packages
#      run: ./gradlew publish
#      env:
#        USERNAME: ${{ github.actor }}
#        TOKEN: ${{ secrets.GITHUB_TOKEN }}
